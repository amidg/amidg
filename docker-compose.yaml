services:
  strapi:
    container_name: strapi
    image: ghcr.io/amidg/strapi:latest
    # use for debugging to keep container permanently running in shell
    #command: tail -F anything 
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      # some files from the strapi documentation are already provided here:
      # https://github.com/amidg/amidg/blob/master/blog/Dockerfile
      # These files are:
      #- ./package.json:/opt/package.json
      # - ./yarn.lock:/opt/yarn.lock
      #- ./config:/opt/app/config
      #- ./src:/opt/app/src
      #- ./public/uploads:/opt/app/public/uploads
      - ./.env:/opt/app/.env
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    restart: unless-stopped
    env_file: .env
    image: postgres:17.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      #using a volume
      - strapi-data:/var/lib/postgresql/data/
      # if you want to use a bind folder
      #- ./data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    networks:
      - strapi

volumes:
  strapi-data:

networks:
  strapi:
    name: strapi
    driver: bridge
